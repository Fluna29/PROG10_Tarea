package franluna.prog10_tarea;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;


/**
 *
 * @author fluna
 */
public class BlocNotas extends javax.swing.JFrame {

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BlocNotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(BlocNotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(BlocNotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            Logger.getLogger(BlocNotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BlocNotas().setVisible(true);
            }
        });
    }
    
    private File ficheroActual;
    /**
     * Creates new form BlocNotas
     */
    public BlocNotas() {
        initComponents();
    }
    
    /**
     * Esta función asigna el título Fichero no guardado cuando no hay ningún archivo seleccionado con anterioridad.
     */
    private void tituloNulo(){
        if(ficheroActual == null){
            setTitle("<Fichero no guardado>");
        }
    }
    
    private void escribirArchivo(){
        try (FileWriter writer = new FileWriter(this.ficheroActual)){
            writer.write(this.areaTexto.getText());
        }catch (IOException ex){
            Logger.getLogger(BlocNotas.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }
        
    private void guardarArchivo (){
        
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setMultiSelectionEnabled(false);
        
        int seleccion = fileChooser.showSaveDialog(this.getContentPane());
        
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            this.ficheroActual = fileChooser.getSelectedFile();
            if (!this.ficheroActual.getAbsolutePath().endsWith(".txt")) {
                this.ficheroActual = new File(this.ficheroActual.getAbsolutePath() + ".txt");
            }
            this.escribirArchivo();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaTexto = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuArchivo = new javax.swing.JMenu();
        botonCrear = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        botonAbrir = new javax.swing.JMenuItem();
        botonGuardar = new javax.swing.JMenuItem();
        botonGuardarComo = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        botonSalir = new javax.swing.JMenuItem();
        menuAyuda = new javax.swing.JMenu();
        botonAcercaDe = new javax.swing.JMenuItem();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("<Fichero no guardado>");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        areaTexto.setColumns(20);
        areaTexto.setRows(5);
        jScrollPane1.setViewportView(areaTexto);

        menuArchivo.setText("Archivo");

        botonCrear.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        botonCrear.setText("Crear");
        botonCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCrearActionPerformed(evt);
            }
        });
        menuArchivo.add(botonCrear);
        menuArchivo.add(jSeparator1);

        botonAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        botonAbrir.setText("Abrir");
        botonAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAbrirActionPerformed(evt);
            }
        });
        menuArchivo.add(botonAbrir);

        botonGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        botonGuardar.setText("Guardar");
        botonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarActionPerformed(evt);
            }
        });
        menuArchivo.add(botonGuardar);

        botonGuardarComo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        botonGuardarComo.setText("Guardar Como...");
        botonGuardarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarComoActionPerformed(evt);
            }
        });
        menuArchivo.add(botonGuardarComo);
        menuArchivo.add(jSeparator3);

        botonSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        botonSalir.setText("Salir");
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });
        menuArchivo.add(botonSalir);

        jMenuBar1.add(menuArchivo);

        menuAyuda.setText("Ayuda");

        botonAcercaDe.setText("Acerca de");
        botonAcercaDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAcercaDeActionPerformed(evt);
            }
        });
        menuAyuda.add(botonAcercaDe);

        jMenuBar1.add(menuAyuda);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCrearActionPerformed
        this.areaTexto.setText("");
        this.ficheroActual = null;
        tituloNulo();
    }//GEN-LAST:event_botonCrearActionPerformed

    private void botonAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAbrirActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setMultiSelectionEnabled(false);
        
        int seleccion = fileChooser.showOpenDialog(this.getContentPane());
        
        if(seleccion == JFileChooser.APPROVE_OPTION){
            this.ficheroActual = fileChooser.getSelectedFile();
            
            try(FileReader reader = new FileReader(this.ficheroActual)){
                String texto = "";
                int valorLetra = reader.read();
                while(valorLetra != -1){
                    texto += (char) valorLetra;
                    valorLetra = reader.read();
                }
                this.areaTexto.setText(texto);
                setTitle(this.ficheroActual.getAbsolutePath());

            }catch (FileNotFoundException ex){
                System.out.println(ex.getMessage());
            }catch (IOException ex){
                System.out.println(ex.getMessage());
            }
        }
    }//GEN-LAST:event_botonAbrirActionPerformed

    private void botonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarActionPerformed
        
        if(this.ficheroActual == null){
            this.guardarArchivo();
            setTitle(this.ficheroActual.getAbsolutePath());
        }else{
            this.escribirArchivo();
        }
    }//GEN-LAST:event_botonGuardarActionPerformed

    private void botonGuardarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarComoActionPerformed
        this.guardarArchivo();
        setTitle(this.ficheroActual.getAbsolutePath());
    }//GEN-LAST:event_botonGuardarComoActionPerformed

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        int seleccion = JOptionPane.showConfirmDialog(this,"¿Estás seguro de que quieres salir?","Salir", JOptionPane.YES_NO_OPTION);
        if (seleccion == JOptionPane.YES_OPTION){
            setVisible(false);
            System.exit(0);
        }
        
    }//GEN-LAST:event_botonSalirActionPerformed

    private void botonAcercaDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAcercaDeActionPerformed
        JOptionPane.showMessageDialog(this, "Aplicación de editor de textos \nDesarrollado por : Francisco Luna Raya", "Acerca de", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_botonAcercaDeActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaTexto;
    private javax.swing.JMenuItem botonAbrir;
    private javax.swing.JMenuItem botonAcercaDe;
    private javax.swing.JMenuItem botonCrear;
    private javax.swing.JMenuItem botonGuardar;
    private javax.swing.JMenuItem botonGuardarComo;
    private javax.swing.JMenuItem botonSalir;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JMenu menuArchivo;
    private javax.swing.JMenu menuAyuda;
    // End of variables declaration//GEN-END:variables
}
